<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dms.api.modules.dao.sys.user.SysUserDao">
	<select id="queryObject" resultType="com.dms.api.modules.entity.sys.user.SysUserEntity">
		select * from sys_user where
		user_id = #{value}
	</select>

	<select id="queryList" resultType="com.dms.api.modules.entity.sys.user.SysUserEntity">
		select * from sys_user
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId}
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%')
			</if>
			<if test="userType != null">
				and `user_type` = #{userType}
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId}
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%')
			</if>
			<if test="userType != null">
				and `user_type` = #{userType}
			</if>
		</where>
	</select>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from
		sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

	<!-- 查询用户的所有菜单ID -->
	<select id="queryAllMenuId" resultType="long">
		select distinct
		rm.menu_id from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

	<select id="queryByUserName" resultType="com.dms.api.modules.entity.sys.user.SysUserEntity">
		select * from sys_user
		where username = #{username}
	</select>

	<insert id="save" parameterType="com.dms.api.modules.entity.sys.user.SysUserEntity"
		useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
		`user_id`,
		`username`,
		`password`,
		`org_id`,
		`dealer_id`,
		`salt`,
		`email`,
		`mobile`,
		`status`,
		`create_user_id`,
		`create_time`,
		`user_type`,
		`tra_pwd`
		)
		values
		(
		#{userId},
		#{username},
		#{password},
		#{orgId},
		#{dealerId},
		#{salt},
		#{email},
		#{mobile},
		#{status},
		#{createUserId},
		#{createTime},
		#{userType},
		#{traPwd}
		)
	</insert>

	<update id="update" parameterType="com.dms.api.modules.entity.sys.user.SysUserEntity">
		update sys_user
		<set>
			<if test="orgId != null and orgId != '' ">`org_id` = #{orgId},</if>
			<if test="dealerId != null and dealerId != '' ">`dealer_id` = #{dealerId},</if>
			<if test="username != null and username != '' ">`username` = #{username}, </if>
			<if test="password != null and password != '' ">`password` = #{password}, </if>
			<if test="email != null and email != '' ">`email` = #{email}, </if>
			<if test="mobile != null and mobile != '' ">`mobile` = #{mobile}, </if>
			<if test="status != null and status != '' ">`status` = #{status}, </if>
			<if test="userType != null and userType != '' ">`user_type` = #{userType}, </if>
			<if test="traPwd != null and traPwd != '' ">`tra_pwd` = #{traPwd}</if>
		</set>
		where user_id = #{userId}
		<if test="createUserId != null">
			and `create_user_id` = #{createUserId}
		</if>
	</update>

	<update id="updatePassword" parameterType="map">
		update sys_user set
		`password` = #{newPassword}
		where user_id = #{userId} and password = #{password}
	</update>

	<delete id="deleteBatch">
		delete from sys_user where user_id in
		<foreach item="userId" collection="array" open="(" separator=","
			close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in
		<foreach item="userId" collection="array" open="(" separator=","
			close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>